<?php


namespace app\models;


use app\models\rules\BlackListRule;
use yii\base\Model;

class Activity extends ActivityBase
{
//    public $title;
//    public $description;
//    public $dateStart;
    public $duration;
    public $isEnding;
//    public $dateEnd;
//    public $isBlocked;
//    public $isRepeat;
//    public $repeatType;
    public $authorId;
//    public $email;
    public $useNotification;
    public $filesReal;

    const DAY = 0;
    const WEEK = 1;
    const MONTH = 2;
    const REPEAT_TYPE = [self::DAY=> 'Каждый день', self::WEEK=> 'Каждую неделю', self::MONTH=> 'Каждый месяц', ];

    public function beforeValidate()
    {
        if (!empty($this->dateStart)){
            $date = \DateTime::createFromFormat('d.m.Y', $this->dateStart);
            if ($date) {
                $this->dateStart = $date->format('Y-m-d');
            }
        }
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }



    public function rules()
    {
        return array_merge([
            ['filesReal','file', 'extensions' => ['jpg', 'png', 'jpeg'], 'maxFiles' => 3],
            [['title','description'], 'trim'],
            [['title', 'description', 'dateStart'],'required'],
            ['title', 'string', 'min' => 3, 'max' => 50],
            [['dateStart','dateEnd'],'string'],
            ['dateStart', 'date', 'format' => 'php:Y-m-d'],
            ['description','string','min' => 2,'max' => 250],
            [['isBlocked','isRepeat','isEnding', 'useNotification'],'boolean'],
            ['email', 'email'],
            ['dateEnd', 'required','when' => function($model) {
                return $model->isEnding;
            }],
            ['title',BlackListRule::class,'list' => ['Хер']],
            ['repeatType', 'required','when' => function($model) {
                return $model->isRepeat;
            }],
            ['email', 'required','when' => function($model) {
                return $model->useNotification;
            }],
            [['email','files'], 'default', 'value' => null],
            ['repeatType', 'in', 'range' => array_keys(self::REPEAT_TYPE)],
        ],parent::rules());
    }

    public function attributeLabels()
    {
        return [
            'title'=>'Название события',
            'description'=>'Описание',
            'dateStart'=>'Дата',
            'dateEnd'=>'Дата завершения',
            'isEnding'=>'Установить дату завершения',
            'isBlocked'=>'Блокирующее',
            'isRepeat'=>'Повторяющееся',
            'email'=>'E-mail',
            'useNotification'=>'Уведомлять на E-mail',
            'repeatType'=>'Повторять',
            'filesReal'=>'Изображение(я)',
        ];
    }
}